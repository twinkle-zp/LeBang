<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.plat.dao.TrafficMapper" >
  <resultMap id="BaseResultMap" type="com.plat.entity.Traffic" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="start" property="start" jdbcType="TIMESTAMP" />
    <result column="end" property="end" jdbcType="TIMESTAMP" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
    <result column="tid" property="tid" jdbcType="INTEGER" />
    <result column="joinnum" property="joinnum" jdbcType="INTEGER" />
    <result column="neednum" property="neednum" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="tname" property="tname" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, start, end, uid, content, flag, tid, joinnum, neednum, phone
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from traffic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from traffic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.plat.entity.Traffic" >
    insert into traffic (id, start, end, 
      uid, content, flag, 
      tid, joinnum, neednum, 
      phone)
    values (#{id,jdbcType=INTEGER}, #{start,jdbcType=TIMESTAMP}, #{end,jdbcType=TIMESTAMP}, 
      #{uid,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{flag,jdbcType=INTEGER}, 
      #{tid,jdbcType=INTEGER}, #{joinnum,jdbcType=INTEGER}, #{neednum,jdbcType=INTEGER}, 
      #{phone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.plat.entity.Traffic" >
    insert into traffic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="start != null" >
        start,
      </if>
      <if test="end != null" >
        end,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="tid != null" >
        tid,
      </if>
      <if test="joinnum != null" >
        joinnum,
      </if>
      <if test="neednum != null" >
        neednum,
      </if>
      <if test="phone != null" >
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="start != null" >
        #{start,jdbcType=TIMESTAMP},
      </if>
      <if test="end != null" >
        #{end,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="joinnum != null" >
        #{joinnum,jdbcType=INTEGER},
      </if>
      <if test="neednum != null" >
        #{neednum,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.plat.entity.Traffic" >
    update traffic
    <set >
      <if test="start != null" >
        start = #{start,jdbcType=TIMESTAMP},
      </if>
      <if test="end != null" >
        end = #{end,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="tid != null" >
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="joinnum != null" >
        joinnum = #{joinnum,jdbcType=INTEGER},
      </if>
      <if test="neednum != null" >
        neednum = #{neednum,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.plat.entity.Traffic" >
    update traffic
    set start = #{start,jdbcType=TIMESTAMP},
      end = #{end,jdbcType=TIMESTAMP},
      uid = #{uid,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER},
      tid = #{tid,jdbcType=INTEGER},
      joinnum = #{joinnum,jdbcType=INTEGER},
      neednum = #{neednum,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getTotalCount" resultType="int">
    select count(id) from traffic where flag=0
  </select>

  <select id="findPage" resultMap="BaseResultMap" parameterType="object">
    select t.id, t.start, t.end, t.uid, t.content, t.flag, t.tid, t.joinnum, t.neednum, t.phone,tt.name tname
     from traffic t
     left join traffic_type tt on t.tid=tt.id
     where t.flag=0
     limit #{param1},#{param2}
  </select>

  <select id="getMyCount" resultType="int">
    select count(id) from traffic where uid=#{uid}
  </select>

  <select id="findMyPage" resultMap="BaseResultMap" parameterType="object">
    select t.id, t.start, t.end, t.uid, t.content, t.flag, t.tid, t.joinnum, t.neednum, t.phone,tt.name tname
     from traffic t
     left join traffic_type tt on t.tid=tt.id
     where t.flag=0 and t.uid=#{param3}
     limit #{param1},#{param2}
  </select>
</mapper>