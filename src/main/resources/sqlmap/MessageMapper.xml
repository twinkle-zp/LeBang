<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.plat.dao.MessageMapper" >
  <resultMap id="BaseResultMap" type="com.plat.entity.Message" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="to_id" property="toId" jdbcType="INTEGER" />
    <result column="from_id" property="fromId" jdbcType="INTEGER" />
    <result column="good_id" property="goodId" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, to_id, from_id, good_id, content, date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.plat.entity.Message" >
    insert into message (id, to_id, from_id, 
      good_id, content, date
      )
    values (#{id,jdbcType=INTEGER}, #{toId,jdbcType=INTEGER}, #{fromId,jdbcType=INTEGER}, 
      #{goodId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.plat.entity.Message" >
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="toId != null" >
        to_id,
      </if>
      <if test="fromId != null" >
        from_id,
      </if>
      <if test="goodId != null" >
        good_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="date != null" >
        date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="toId != null" >
        #{toId,jdbcType=INTEGER},
      </if>
      <if test="fromId != null" >
        #{fromId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null" >
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.plat.entity.Message" >
    update message
    <set >
      <if test="toId != null" >
        to_id = #{toId,jdbcType=INTEGER},
      </if>
      <if test="fromId != null" >
        from_id = #{fromId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null" >
        good_id = #{goodId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.plat.entity.Message" >
    update message
    set to_id = #{toId,jdbcType=INTEGER},
      from_id = #{fromId,jdbcType=INTEGER},
      good_id = #{goodId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <resultMap id="message" type="com.plat.entity.Message">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="to_id" property="toId" jdbcType="INTEGER" />
    <result column="from_id" property="fromId" jdbcType="INTEGER" />
    <result column="good_id" property="goodId" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="toname" property="toName" jdbcType="VARCHAR" />
    <result column="fromname" property="fromName" jdbcType="VARCHAR" />
    <result column="goodname" property="goodName" jdbcType="VARCHAR" />
  </resultMap>
  <select id="findList" parameterType="object" resultMap="message">
    select m.*,u1.`name` toname,u2.`name` fromname,g.`name` goodname from message m
    LEFT JOIN `user` u1 on m.to_id=u1.uid
    LEFT JOIN `user` u2 on m.from_id=u2.uid
    LEFT JOIN goods g on m.good_id=g.id
    WHERE m.good_id=#{param1} AND (m.to_id=#{param2} OR m.from_id=#{param2})
  </select>

  <select id="findMessageList" parameterType="int" resultMap="BaseResultMap">
    SELECT *,COUNT(DISTINCT to_id,from_id)
    FROM message
    WHERE to_id=#{uid} or from_id=#{uid}
    GROUP BY to_id,from_id
  </select>
</mapper>